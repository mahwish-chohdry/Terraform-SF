


# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
 
trigger:
- main
 
variables:
tf_version: "0.12.26"
tf_state_rg: "tfstate-rg" 
tz_state_location: "uksouth"
tf_state_sa_name: "tfstatesmartfan"
tf_state_container_name: "tfstate" 
tf_state_tags: ("env=blogpost-terraform-devops-pipeline" "deployedBy=devops") 
tf_environment: "dev" 
 
pool:
vmImage: ubuntu-latest
 
steps:
  - task: terraformInstaller@0
displayName: "Install Terraform $(tf_version)"
inputs:
terraformVersion: "$(tf_version)"
 
  - task: AzureCLI@2
displayName: "Create/Check the Terraform Statefile Azure Storage Account"
inputs:
azureSubscription: 'Mahwish VS Enterprise Subscription – MPN (e09e8db9-bd86-48ae-8eeb-eda17abcc24a)'
addSpnToEnvironment: true
scriptType: "bash"
scriptLocation: "inlineScript"
inlineScript: |
        TAGS=$(tf_state_tags)
        az group create --name $(tf_state_rg) --location $(tz_state_location) --tags "${​​​​​​​​TAGS[@]}​​​​​​​​"
        az storage account create --resource-group $(tf_state_rg) --name $(tf_state_sa_name) --sku Standard_GRS --encryption-services blob --tags "${​​​​​​​​TAGS[@]}​​​​​​​​"
        ACCOUNT_KEY=$(az storage account keys list --resource-group $(tf_state_rg) --account-name $(tf_state_sa_name) --query [0].value -o tsv)
        az storage container create --name $(tf_state_container_name) --account-name $(tf_state_sa_name) --account-key $ACCOUNT_KEY
        echo "##vso[task.setvariable variable=tf_state_sa_key]$ACCOUNT_KEY"

  - task: TerraformTaskV1@0
displayName: "Run > terraform init"
inputs:
command: "init"
backendServiceArm: 'Mahwish VS Enterprise Subscription – MPN (e09e8db9-bd86-48ae-8eeb-eda17abcc24a)'
workingDirectory: '$(System.DefaultWorkingDirectory)'
backendAzureRmResourceGroupName: "$(tf_state_rg)"
backendAzureRmStorageAccountName: "$(tf_state_sa_name)"
backendAzureRmContainerName: $(tf_state_container_name)
backendAzureRmKey: "$(tf_environment).terraform.tstate"

 
  - task: TerraformTaskV1@0
displayName: "Run > terraform plan"
inputs:
command: "plan"
environmentServiceNameAzureRM:  'Mahwish VS Enterprise Subscription – MPN (e09e8db9-bd86-48ae-8eeb-eda17abcc24a)'
 
  - task: TerraformTaskV1@0
displayName: "Run > terraform apply"
inputs:
command: "apply"
environmentServiceNameAzureRM: 'Mahwish VS Enterprise Subscription – MPN (e09e8db9-bd86-48ae-8eeb-eda17abcc24a)'

